st[2,1] = paste(mean(filt_CN$AGE),"±", sd(filt_CN$AGE), sep="")
st
sexadmale
sexadfemale
st[1,2] = paste(sexadfemale,"F/",sexadmale,"M", sep="")
st
st[1,3] = gender_chisq$p.value
st
st[1,3] = format(gender_chisq$p.value, digits=4)
st
st[1,3] = format(gender_chisq$p.value, digits=3)
st
st[2,1] = paste(format(mean(agecn), digits=3),"±", format(sd(agecn), digits=3), sep="")
# Age Row
agecn <- filt_CN$AGE
st[2,1] = paste(format(mean(agecn), digits=3),"±", format(sd(agecn), digits=3), sep="")
st
agead <- filt_AD$AGE
# MMSE Row
mmsecn <- filt_CN$MMSE
mmsead <- filt_AD$MMSE
st[3,1] <- paste(format(mean(mmsecn), digits=3),"±", format(sd(mmsecn), digits=3), sep="")
st[3,2] <- paste(format(mean(mmsead), digits=3),"±", format(sd(mmsead), digits=3), sep="")
st[3,3] <- format(MMSEtest$p.value, digits=3)
st
st[2,2] <- paste(format(mean(agead), digits=3),"±", format(sd(agead), digits=3), sep="")
st[2,3] <- format(AGEtest$p.value, digits=3)
st
st <- matrix(nrow=5, ncol=3)
sexcnmale <- sum(filt_CN$PTGENDER == "Male")
sexcnfemale <- sum(filt_CN$PTGENDER == "Female")
sexadmale <- sum(filt_AD$PTGENDER == "Male")
sexadfemale <- sum(filt_AD$PTGENDER == "Female")
st <- data.frame(st, row.names=c("Sex", "Age", "MMSE", "ADAS11", "ADAS13"))
colnames(st) <- c("CN", "AD", "p-value")
# Sex Row
st[1,1] <- paste(sexcnfemale,"F/",sexcnmale,"M", sep="")
st[1,2] <- paste(sexadfemale,"F/",sexadmale,"M", sep="")
st[1,3] <- format(gender_chisq$p.value, digits=3)
# Age Row
agecn <- filt_CN$AGE
agead <- filt_AD$AGE
st[2,1] <- paste(format(mean(agecn), digits=3),"±", format(sd(agecn), digits=3), sep="")
st[2,2] <- paste(format(mean(agead), digits=3),"±", format(sd(agead), digits=3), sep="")
st[2,3] <- format(AGEtest$p.value, digits=3)
# MMSE Row
mmsecn <- filt_CN$MMSE
mmsead <- filt_AD$MMSE
st[3,1] <- paste(format(mean(mmsecn), digits=3),"±", format(sd(mmsecn), digits=3), sep="")
st[3,2] <- paste(format(mean(mmsead), digits=3),"±", format(sd(mmsead), digits=3), sep="")
st[3,3] <- format(MMSEtest$p.value, digits=3)
# ADAS11 Row
adas11cn <- filt_CN$ADAS11
adas11ad <- filt_AD$ADAS11
st[4,1] <- paste(format(mean(adas11cn), digits=3),"±", format(sd(adas11cn), digits=3), sep="")
st[4,2] <- paste(format(mean(adas11ad), digits=3),"±", format(sd(adas11ad), digits=3), sep="")
st[4,3] <- format(ADAS11test$p.value, digits=3)
# ADAS13 Row
adas13cn <- filt_CN$ADAS13
adas13ad <- filt_AD$ADAS13
st[5,1] <- paste(format(mean(adas13cn), digits=3),"±", format(sd(adas13cn), digits=3), sep="")
st[5,2] <- paste(format(mean(adas13ad), digits=3),"±", format(sd(adas13ad), digits=3), sep="")
st[5,3] <- format(ADAS13test$p.value, digits=3)
st
st
st[1,3] <- paste(format(gender_chisq$p.value, digits=3), "Chi sq.", sep="")
st
st <- matrix(nrow=5, ncol=3)
sexcnmale <- sum(filt_CN$PTGENDER == "Male")
sexcnfemale <- sum(filt_CN$PTGENDER == "Female")
sexadmale <- sum(filt_AD$PTGENDER == "Male")
sexadfemale <- sum(filt_AD$PTGENDER == "Female")
st <- data.frame(st, row.names=c("Sex", "Age", "MMSE", "ADAS11", "ADAS13"))
colnames(st) <- c("CN", "AD", "p-value")
# Sex Row
st[1,1] <- paste(sexcnfemale,"F/",sexcnmale,"M", sep="")
st[1,2] <- paste(sexadfemale,"F/",sexadmale,"M", sep="")
st[1,3] <- paste(format(gender_chisq$p.value, digits=3), " (Chi sq.)", sep="")
# Age Row
agecn <- filt_CN$AGE
agead <- filt_AD$AGE
st[2,1] <- paste(format(mean(agecn), digits=3),"±", format(sd(agecn), digits=3), sep="")
st[2,2] <- paste(format(mean(agead), digits=3),"±", format(sd(agead), digits=3), sep="")
st[2,3] <- format(AGEtest$p.value, digits=3)
# MMSE Row
mmsecn <- filt_CN$MMSE
mmsead <- filt_AD$MMSE
st[3,1] <- paste(format(mean(mmsecn), digits=3),"±", format(sd(mmsecn), digits=3), sep="")
st[3,2] <- paste(format(mean(mmsead), digits=3),"±", format(sd(mmsead), digits=3), sep="")
st[3,3] <- format(MMSEtest$p.value, digits=3)
# ADAS11 Row
adas11cn <- filt_CN$ADAS11
adas11ad <- filt_AD$ADAS11
st[4,1] <- paste(format(mean(adas11cn), digits=3),"±", format(sd(adas11cn), digits=3), sep="")
st[4,2] <- paste(format(mean(adas11ad), digits=3),"±", format(sd(adas11ad), digits=3), sep="")
st[4,3] <- format(ADAS11test$p.value, digits=3)
# ADAS13 Row
adas13cn <- filt_CN$ADAS13
adas13ad <- filt_AD$ADAS13
st[5,1] <- paste(format(mean(adas13cn), digits=3),"±", format(sd(adas13cn), digits=3), sep="")
st[5,2] <- paste(format(mean(adas13ad), digits=3),"±", format(sd(adas13ad), digits=3), sep="")
st[5,3] <- format(ADAS13test$p.value, digits=3)
st
st
q()
# Clear workspace
rm(list = ls())
getwd()
setwd("C:/Users/Iñigo/PycharmProjects/PBL-NEUROMOD/Maite_approach_voxel/")
#### Get CN and AD subject names ####
cndirs <- basename(list.dirs("E:/PBL_MASTER/CN_CONNMAT"))
cndirs <- cndirs[2:length(cndirs)]
cntestdirs <- basename(list.dirs("E:/PBL_MASTER/TEST/NC"))
cntestdirs <- cntestdirs[2:length(cntestdirs)]
cnsubjs <- c(cndirs, cntestdirs)
# Clear workspace
rm(list = ls())
getwd()
setwd("C:/Users/Iñigo/PycharmProjects/PBL-NEUROMOD/Maite_approach_voxel/")
#### Get CN and AD subject names ####
cndirs <- basename(list.dirs("E:/PBL_MASTER/CN_CONNMAT"))
cndirs <- cndirs[2:length(cndirs)]
cntestdirs <- basename(list.dirs("E:/PBL_MASTER/TEST/NC"))
cntestdirs <- cntestdirs[2:length(cntestdirs)]
cnsubjs <- c(cndirs, cntestdirs)
addirs <- basename(list.dirs("E:/PBL_MASTER/AD_CONNMAT"))
addirs <- addirs[2:length(addirs)]
adtestdirs <- basename(list.dirs("E:/PBL_MASTER/TEST/AD"))
adtestdirs <- adtestdirs[2:length(adtestdirs)]
adsubjs <- c(addirs, adtestdirs)
# Load and make dataframe out of FA and MD
dirs <- list.dirs("E:/PBL_MASTER/done_VOXEL_METRICS")
dirs <- dirs[2:length(dirs)]
#### FA (paired regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(FA_dual_region_df) <- c(datuk$Parcel, "Label")
i <- 1
View(FA_dual_region_df)
for (folder in dirs) {
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df[i, 1:(ncol(FA_dual_region_df)-1)] <- datuk$FA_mean
if (subname %in% cnsubjs) {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 0
}
else {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 1
}
i <- i + 1
}
FA_dual_region_df
dirs
# Load and make dataframe out of FA and MD
dirs <- list.dirs("E:/PBL_MASTER/VOXEL_METRICS")
dirs <- dirs[2:length(dirs)]
#### FA (paired regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(FA_dual_region_df) <- c(datuk$Parcel, "Label")
i <- 1
for (folder in dirs) {
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df[i, 1:(ncol(FA_dual_region_df)-1)] <- datuk$FA_mean
if (subname %in% cnsubjs) {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 0
}
else {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 1
}
i <- i + 1
}
# Remove row 37 because it is incorrect (lots of NA)
FA_dual_region_df <- FA_dual_region_df[-37]
dim(FA_dual_region_df)
# Load and make dataframe out of FA and MD
dirs <- list.dirs("E:/PBL_MASTER/VOXEL_METRICS")
dirs <- dirs[2:length(dirs)]
#### FA (paired regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(FA_dual_region_df) <- c(datuk$Parcel, "Label")
i <- 1
for (folder in dirs) {
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df[i, 1:(ncol(FA_dual_region_df)-1)] <- datuk$FA_mean
if (subname %in% cnsubjs) {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 0
}
else {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 1
}
i <- i + 1
}
dim(FA_dual_region_df)
cat("Conflictive, incorrect subject is: ", basename(dirs[37]), sep="")
regions <- datuk$Parcel
i <- 1
regions
regions[i]
FA_dual_region_df[[region]][FA_dual_region_df$Label==1]
region <- regions[3]
region
FA_dual_region_df[[region]][FA_dual_region_df$Label==1]
len(FA_dual_region_df[[region]][FA_dual_region_df$Label==1])
length(FA_dual_region_df[[region]][FA_dual_region_df$Label==1])
length(FA_dual_region_df[[region]][FA_dual_region_df$Label==0])
ad <- FA_dual_region_df[[region]][FA_dual_region_df$Label==1]
cn <- FA_dual_region_df[[region]][FA_dual_region_df$Label==0]
vt <- var.test(ad, cn)
vt
if (vt$p.value < 0.05) {
varbool <- FALSE
}
varbool
tt <- t.test(ad, cn, var.equal=varbool)
tt
regions <- datuk$Parcel
i <- 1
for (region in regions) {
ad <- FA_dual_region_df[[region]][FA_dual_region_df$Label==1]
cn <- FA_dual_region_df[[region]][FA_dual_region_df$Label==0]
vt <- var.test(ad, cn)
if (vt$p.value < 0.05) {
varbool <- FALSE
}
else{
varbool <- TRUE
}
tt <- t.test(ad, cn, var.equal=varbool)
pvals_fa_dual[i] <- tt$p.value
i <- i + 1
}
pvals_fa_dual <- []
pvals_fa_dual <- [NULL]
pvals_fa_dual <- NULL
pvals_fa_dual
tt
pvals_fa_dual <- c(pvals_fa_dual,tt$p.value)
pvals_fa_dual
# Remove row 37 because it is incorrect (lots of NA)
FA_dual_region_df <- FA_dual_region_df[-37,]
cat("Conflictive, incorrect subject is: ", basename(dirs[37]), sep="")
# Clear workspace
rm(list = ls())
getwd()
setwd("C:/Users/Iñigo/PycharmProjects/PBL-NEUROMOD/Maite_approach_voxel/")
#### Get CN and AD subject names ####
cndirs <- basename(list.dirs("E:/PBL_MASTER/CN_CONNMAT"))
cndirs <- cndirs[2:length(cndirs)]
cntestdirs <- basename(list.dirs("E:/PBL_MASTER/TEST/NC"))
cntestdirs <- cntestdirs[2:length(cntestdirs)]
cnsubjs <- c(cndirs, cntestdirs)
addirs <- basename(list.dirs("E:/PBL_MASTER/AD_CONNMAT"))
addirs <- addirs[2:length(addirs)]
adtestdirs <- basename(list.dirs("E:/PBL_MASTER/TEST/AD"))
adtestdirs <- adtestdirs[2:length(adtestdirs)]
adsubjs <- c(addirs, adtestdirs)
# Load and make dataframe out of FA and MD
dirs <- list.dirs("E:/PBL_MASTER/VOXEL_METRICS")
dirs <- dirs[2:length(dirs)]
#### FA (paired regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(FA_dual_region_df) <- c(datuk$Parcel, "Label")
i <- 1
for (folder in dirs) {
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_dual_region_df[i, 1:(ncol(FA_dual_region_df)-1)] <- datuk$FA_mean
if (subname %in% cnsubjs) {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 0
}
else {
FA_dual_region_df[i, ncol(FA_dual_region_df)] <- 1
}
i <- i + 1
}
# Remove row 37 because it is incorrect (lots of NA)
FA_dual_region_df <- FA_dual_region_df[-37,]
cat("Conflictive, incorrect subject is: ", basename(dirs[37]), sep="")
regions <- datuk$Parcel
i <- 1
pvals_fa_dual <- NULL
for (region in regions) {
ad <- FA_dual_region_df[[region]][FA_dual_region_df$Label==1]
cn <- FA_dual_region_df[[region]][FA_dual_region_df$Label==0]
vt <- var.test(ad, cn)
if (vt$p.value < 0.05) {
varbool <- FALSE
}
else{
varbool <- TRUE
}
tt <- t.test(ad, cn, var.equal=varbool)
pvals_fa_dual <- c(pvals_fa_dual,tt$p.value)
i <- i + 1
}
pvals_fa_dual
p.adjust()
p.adjust.methods()
p.adjust.methods
?p.adjust
fdr_corrected_fa_dual <- p.adjust(pvals_fa_dual, method="fdr", n=length(pvals_fa_dual))
fdr_corrected_fa_dual
bonf_corrected_fa_dual <- p.adjust(pvals_fa_dual, method="bonferroni", n=length(pvals_fa_dual))
bonf_corrected_fa_dual
fdr_corrected_fa_dual<0.05
regions[fdr_corrected_fa_dual<0.05]
fdr_corrected_fa_dual[fdr_corrected_fa_dual<0.05]
bonf_corrected_fa_dual[bonf_corrected_fa_dual<0.05]
regions[bonf_corrected_fa_dual<0.05]
#### MD (paired regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_md_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
datuk
colnames(datuk)
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_md_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
MD_dual_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(MD_dual_region_df) <- c(datuk$Parcel, "Label")
i <- 1
for (folder in dirs) {
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_pairs_md_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
MD_dual_region_df[i, 1:(ncol(MD_dual_region_df)-1)] <- datuk$MD_mean
if (subname %in% cnsubjs) {
MD_dual_region_df[i, ncol(MD_dual_region_df)] <- 0
}
else {
MD_dual_region_df[i, ncol(MD_dual_region_df)] <- 1
}
i <- i + 1
}
# Remove row 37 because it is incorrect (lots of NA)
MD_dual_region_df <- MD_dual_region_df[-37,]
cat("Conflictive, incorrect subject is: ", basename(dirs[37]), sep="")
regions <- datuk$Parcel
i <- 1
pvals_md_dual <- NULL
for (region in regions) {
ad <- MD_dual_region_df[[region]][MD_dual_region_df$Label==1]
cn <- MD_dual_region_df[[region]][MD_dual_region_df$Label==0]
vt <- var.test(ad, cn)
if (vt$p.value < 0.05) {
varbool <- FALSE
}
else{
varbool <- TRUE
}
tt <- t.test(ad, cn, var.equal=varbool)
pvals_md_dual <- c(pvals_md_dual,tt$p.value)
i <- i + 1
}
fdr_corrected_md_dual <- p.adjust(pvals_md_dual, method="fdr", n=length(pvals_md_dual))
bonf_corrected_md_dual <- p.adjust(pvals_md_dual, method="bonferroni", n=length(pvals_md_dual))
fdr_corrected_fa_dual<0.05
regions[fdr_corrected_fa_dual<0.05]
#### FA (individual regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*region_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
data_path
folder
list.files(folder, pattern = "*region_fa_means.csv")
folder
data_path <- paste(folder, list.files(folder, pattern = "*regional_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
datuk$Parcel
FA_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(FA_dual_region_df) <- c(datuk$Parcel, "Label")
colnames(FA_region_df) <- c(datuk$Parcel, "Label")
datuk$FA_mean
#### FA (individual regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*regional_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(FA_region_df) <- c(datuk$Parcel, "Label")
i <- 1
for (folder in dirs) {
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*regional_fa_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
FA_region_df[i, 1:(ncol(FA_region_df)-1)] <- datuk$FA_mean
if (subname %in% cnsubjs) {
FA_region_df[i, ncol(FA_region_df)] <- 0
}
else {
FA_region_df[i, ncol(FA_region_df)] <- 1
}
i <- i + 1
}
View(FA_region_df)
# Remove row 37 because it is incorrect (lots of NA)
FA_region_df <- FA_region_df[-37,]
cat("Conflictive, incorrect subject is: ", basename(dirs[37]), sep="")
regions <- datuk$Parcel
i <- 1
pvals_fa_indiv <- NULL
pvals_fa_indiv <- NULL
for (region in regions) {
ad <- FA_region_df[[region]][FA_region_df$Label==1]
cn <- FA_region_df[[region]][FA_region_df$Label==0]
vt <- var.test(ad, cn)
if (vt$p.value < 0.05) {
varbool <- FALSE
}
else{
varbool <- TRUE
}
tt <- t.test(ad, cn, var.equal=varbool)
pvals_fa_indiv <- c(pvals_fa_indiv,tt$p.value)
i <- i + 1
}
pvals_fa_indiv
fdr_corrected_fa_indiv <- p.adjust(pvals_fa_indiv, method="fdr", n=length(pvals_fa_indiv))
bonf_corrected_fa_indiv <- p.adjust(pvals_fa_indiv, method="bonferroni", n=length(pvals_fa_indiv))
regions[fdr_corrected_fa_indiv<0.05]
regions[fdr_corrected_fa_indiv<0.05]
regions[bonf_corrected_fa_indiv<0.05]
#### MD (individual regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*regional_md_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
MD_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(MD_region_df) <- c(datuk$Parcel, "Label")
View(MD_region_df)
#### MD (individual regions) ####
folder <- dirs[1]
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*regional_md_means.csv"), sep="/")
data_path
datuk <- read.csv(data_path, sep=",", header=TRUE)
datuk
datuk$Parcel
MD_region_df <- data.frame(matrix(nrow=length(cnsubjs)+length(adsubjs),
ncol=length(datuk$Parcel)+1))
colnames(MD_region_df) <- c(datuk$Parcel, "Label")
i <- 1
for (folder in dirs) {
subname <- basename(folder)
data_path <- paste(folder, list.files(folder, pattern = "*regional_md_means.csv"), sep="/")
datuk <- read.csv(data_path, sep=",", header=TRUE)
MD_region_df[i, 1:(ncol(MD_region_df)-1)] <- datuk$MD_mean
if (subname %in% cnsubjs) {
MD_region_df[i, ncol(MD_region_df)] <- 0
}
else {
MD_region_df[i, ncol(MD_region_df)] <- 1
}
i <- i + 1
}
View(MD_region_df)
# Remove row 37 because it is incorrect (lots of NA)
MD_region_df <- MD_region_df[-37,]
cat("Conflictive, incorrect subject is: ", basename(dirs[37]), sep="")
regions <- datuk$Parcel
i <- 1
pvals_md_indiv <- NULL
for (region in regions) {
ad <- MD_region_df[[region]][MD_region_df$Label==1]
cn <- MD_region_df[[region]][MD_region_df$Label==0]
vt <- var.test(ad, cn)
if (vt$p.value < 0.05) {
varbool <- FALSE
}
else{
varbool <- TRUE
}
tt <- t.test(ad, cn, var.equal=varbool)
pvals_md_indiv <- c(pvals_md_indiv,tt$p.value)
i <- i + 1
}
fdr_corrected_md_indiv <- p.adjust(pvals_md_indiv, method="fdr", n=length(pvals_md_indiv))
bonf_corrected_md_indiv <- p.adjust(pvals_md_indiv, method="bonferroni", n=length(pvals_md_indiv))
regions[fdr_corrected_md_indiv<0.05]
regions[bonf_corrected_md_indiv<0.05]
